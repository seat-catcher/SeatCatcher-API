package com.sullung2yo.seatcatcher.user.utility.random;

import lombok.NoArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Component;

import java.util.List;
import java.util.concurrent.ThreadLocalRandom;

@Slf4j
@Component
@NoArgsConstructor
public class NameGenerator {

    private static final List<String> nicknames = List.of(
            "고독한 감자튀김", "춤추는 고래", "낭만주의 냉면", "망상속 햄스터", "토요일엔 탕수육",
            "말없이 웃는 기린", "연필깎이 철학자", "오늘도 냉면각", "잉여로운 판다", "진지한 너구리",
            "헬로 비둘기", "낮잠 자는 고양이", "초코송이 먹는 늑대", "심심한 스핑크스", "라면을 삶다 망한 자",
            "전설의 삼겹살", "철학하는 감자", "익숙한 낯선사람", "뚝딱이 박사", "하품하는 사자",
            "분노의 두부", "버터바른 토스트", "안경쓴 참치", "달리는 붕어빵", "하이파이브 두더지",
            "노래하는 젤리곰", "치킨너겟 사냥꾼", "당황한 스노우볼", "야근의 요정", "감정없는 딸기",
            "비오는 날의 오징어", "초코우유 마시는 사슴", "기대하는 도마뱀", "소심한 망고", "고장난 알람시계",
            "미묘한 기린", "우주에서 온 참새", "셀카찍는 마카롱", "신중한 당근", "플랭크 하는 문어",
            "잘생긴 도넛", "피곤한 와플", "소리지르는 캥거루", "드립치는 대나무", "흑화한 강낭콩",
            "건치의 코끼리", "해탈한 딸기잼", "기억상실 파인애플", "미로 속 고슴도치", "떡볶이 먹는 유니콘",
            "장난꾸러기 갈치", "덕질하는 캔디", "구르미 그린 햄스터", "잠수타는 단무지", "졸린 바게트",
            "게임하는 바다사자", "책읽는 타조", "가출한 마늘쫑", "혼란의 스콘", "회전목마 탄 돌고래",
            "탄산빠진 사이다", "눈치없는 딱따구리", "마라맛 고양이", "우당탕탕 바닐라", "깃털의 철학자",
            "일기쓰는 감자", "레고조립 마스터", "소풍가는 문어", "튀김옷 입은 베짱이", "무지개 속 미어캣",
            "시리얼에 물탄 사람", "도토리 줍는 거북이", "낙서하는 펭귄", "치킨 앞에선 침묵", "고민하는 트리케라톱스",
            "허세 가득한 물고기", "사진찍는 베어", "조용한 피카츄", "기묘한 머랭쿠키", "파란색 오렌지",
            "시크한 야옹이", "말랑한 두부", "할말있는 우유", "복잡한 치즈", "알 수 없는 수박",
            "귀찮은 쿠키", "불타는 배추", "진실의 요구르트", "거품 목욕 중인 돌고래", "삼선슬리퍼 혁명가",
            "잔망스런 참외", "문제아 파프리카", "두리번거리는 사막여우", "밥값하는 사이다", "꿈꾸는 멸치",
            "계란말이 탈출범", "말없는 아보카도", "양념통닭 철학자", "꿀떡 같은 하루", "단호한 모카",
            "치열한 팝콘", "곰돌이 푸는 푸가 아님", "베이컨 구워먹다 철학함", "멍때리는 돌멩이", "태풍 속 유부초밥"
    );

    public String generateRandomName() {
        /*
         * ThreadLocalRandom : 쓰레드마다 독립적으로 Random 인스턴스를 갖고 있음 -> 락 없이 빠르게 랜덤값 생성 가능
         */
        int index = ThreadLocalRandom.current().nextInt(nicknames.size());
        log.debug("랜덤으로 생성된 이름: {}", nicknames.get(index));
        return nicknames.get(index);
    }
}
