name: Test

on:
  push:
    branches:
      - uijong
      - yuseok
      - wonseok
      - Seunghan
      - kihye

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest

    name: Run All unit tests on Java 17

    steps:
      - uses: actions/checkout@v3

      - name: Setup java
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'adopt'
          cache: gradle # Gradle dependency caching

      - name: Setup application.properties
        run: |
          mkdir -p ./src/main/resources
          cat << 'EOF' > ./src/main/resources/application.properties
          ${{ secrets.TEST_PROPERTIES }}
          EOF

      - name: Setup firebase-adminsdk-fbsvc-5d0ae449ec.json
        run: |
          echo "${{ secrets.FIREBASE_KEY_JSON }}" | base64 --decode > ./src/main/resources/seat-catcher-firebase-adminsdk-fbsvc-5d0ae449ec.json

      - name: Check java compilable # Java 컴파일 가능 여부 확인
        run: |
          ./gradlew compileJava
          if [ $? -ne 0 ]; then
            echo "❌ Java compilation failed"
            exit 1
          else
            echo "✅ Java compilation succeeded"
          fi

      - name: Start RabbitMQ service
        run: |
          docker run -d --name rabbitmq \
            -p 5672:5672 \
            -p 61613:61613 \
            -e RABBITMQ_DEFAULT_USER=test \
            -e RABBITMQ_DEFAULT_PASS=testtest \
            -e RABBITMQ_DEFAULT_VHOST=ttteeesssttt \
            rabbitmq:4.1.0-management-alpine sh -c "rabbitmq-plugins enable --offline rabbitmq_stomp rabbitmq_web_stomp && rabbitmq-server"

      - name: Wait until RabbitMQ is healthy
        run: |
          timeout 60s bash -c "until docker exec rabbitmq rabbitmqctl status; do echo 'Waiting for RabbitMQ to be healthy...'; sleep 5; done"

      - name: Run tests # 전체 테스트 실행
        run: ./gradlew test